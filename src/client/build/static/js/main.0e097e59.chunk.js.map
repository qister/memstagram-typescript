{"version":3,"sources":["components/MemeMaterial.tsx","components/Main.tsx","API/memesAPI.ts","redux/actions/appActions.ts","containers/MainPageContainer.tsx","pages/ShowPage.tsx","hooks/http.hook.ts","context/AuthContext.ts","containers/AuthContainer.tsx","pages/AuthPage.tsx","hooks/message.hook.ts","components/PlusMeme.tsx","components/AddMeme.tsx","components/MenuAppBar.tsx","App.tsx","hooks/auth.hook.ts","routes.tsx","serviceWorker.ts","redux/reducers/authReducer.ts","redux/reducers/reducer.ts","redux/reducers/index.ts","redux/actions/authActions.ts","index.tsx","redux/store/index.ts"],"names":["useStyles","makeStyles","theme","root","maxWidth","border","borderRadius","boxShadow","padding","media","height","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","cardActions","justifyContent","fabButton","position","zIndex","bottom","left","right","margin","useStylesLoader","createStyles","display","spacing","MemeMaterial_","props","classes","classesLoader","useState","id","setId","author","setAuthor","setDescription","imgUrl","setImgUrl","liked","setLiked","setCreated","likesNumber","setLikesNumber","list","like","isLoading","isLoaded","useEffect","currentMeme","find","meme","email","JSON","parse","localStorage","getItem","description","slice","likedBy","some","user","created","length","tapLike","Fragment","Box","className","onClick","Card","CardHeader","Avatar","aria-label","title","CardMedia","CircularProgress","src","alt","onDoubleClick","to","Fab","color","CardActions","disableSpacing","FormControlLabel","label","checked","onChange","control","Checkbox","icon","checkedIcon","name","IconButton","Copyright","Typography","variant","align","Link","href","Date","getFullYear","appBar","layout","width","marginRight","breakpoints","up","paper","marginTop","marginBottom","buttons","button","config","headers","timeout","likeMeme","axios","post","then","response","console","log","catch","error","Error","memesIsLoaded","data","type","payload","memesIsFail","addLiked","setUser","Main","connect","state","app","currentUser","dispatch","a","addMeme","initMemes","get","CssBaseline","Paper","MainPageContainer","ShowPage","getUser","params","useHttp","loading","setLoading","setError","request","useCallback","url","method","body","stringify","fetch","json","ok","message","clearError","AuthContext","createContext","token","userId","login","logout","isAuthenticated","AuthPage_","username","auth","useContext","text","window","M","toast","html","password","form","setForm","changeHandler","event","target","value","registerHandler","loginHandler","placeholder","htmlFor","style","disabled","AuthContainer","paddingBottom","subheader","palette","background","top","grow","flexGrow","BottomAppBar","AppBar","Toolbar","edge","Dragger","Upload","AddMeme","selectedFile","setSelectedFile","propsDrag","multiple","action","info","status","file","fileList","success","beforeUpload","onClickHandler","FormData","append","hookResponse","e","InboxOutlined","menuButton","MenuAppBar","React","anchorEl","setAnchorEl","open","Boolean","handleClose","aria-controls","aria-haspopup","currentTarget","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","App","setToken","setUserId","setEmail","jwtToken","userEmail","setItem","removeItem","useAuth","routes","path","exact","useRoutes","Provider","location","hostname","match","initialState","authData","authStarted","authCompleted","authFailed","loggedIn","rootReducer","combineReducers","authorization","map","filter","store","createStore","compose","applyMiddleware","logger","thunk","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0e097e59.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\nimport Box from '@material-ui/core/Box'\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward'\nimport Avatar from '@material-ui/core/Avatar'\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport CardActions from '@material-ui/core/CardActions'\nimport IconButton from '@material-ui/core/IconButton'\nimport { red } from '@material-ui/core/colors'\nimport ShareIcon from '@material-ui/icons/Share'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Favorite from '@material-ui/icons/Favorite'\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Fab from '@material-ui/core/Fab'\nimport AddIcon from '@material-ui/icons/Add'\nimport { NavLink } from 'react-router-dom'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 445,\n\n    // background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    // color: 'white',\n    // height: 48,\n    padding: '0 30px',\n  },\n  media: {\n    height: 400,\n    // paddingTop: '56.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n  cardActions: {\n    justifyContent: 'space-between'\n  },\n  fabButton: {\n    position: 'absolute',\n    zIndex: 1,\n    bottom: -30,\n    left: 0,\n    right: 0,\n    margin: '0 auto',\n    \n  },\n}))\n\nconst useStylesLoader = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      '& > * + *': {\n        marginLeft: theme.spacing(2),\n      },\n    },\n  })\n)\n\n//\n\nexport const MemeMaterial_ = (props: any) => {\n\n  const classes = useStyles()\n  const classesLoader = useStylesLoader()\n\n  const [id, setId] = useState(0)\n  const [author, setAuthor] = useState('')\n  const [description, setDescription] = useState('')\n  const [imgUrl, setImgUrl] = useState('')\n  const [liked, setLiked] = useState(false)\n  const [created, setCreated] = useState()\n  const [likesNumber, setLikesNumber] = useState(0)\n\n  const { list, like, isLoading, isLoaded } = props\n\n\n  useEffect(() => {\n    const currentMeme = list.find((meme: any) => meme.id === id)\n\n    if (currentMeme) {\n      const email = JSON.parse(localStorage.getItem('userData')!).email\n\n      setAuthor(currentMeme.author)\n      setDescription(currentMeme.description)\n      setImgUrl('http://localhost:5000/' + currentMeme.imgUrl.slice(7))\n      setLiked(currentMeme.likedBy.some((user: string) => user === email))\n      setCreated(currentMeme.created)\n      setLikesNumber(currentMeme.likedBy.length)\n    }\n  }, [id, list])\n\n  const tapLike = (id: number) => {\n    setLiked(!liked)\n    like(id)\n  }\n\n  const incrementIndex = () => {\n    setId(id < list.length - 1 ? id + 1 : id)\n  }\n\n  const decrementIndex = () => {\n    setId(id > 0 ? id - 1 : id)\n  }\n\n  return (\n    <React.Fragment>\n      \n      <Box display=\"flex\" justifyContent=\"space-between\">\n        <span className=\"top-element\">\n          <ArrowBackIcon onClick={decrementIndex} />\n          <ArrowForwardIcon onClick={incrementIndex} />\n        </span>\n      </Box>\n\n      <Card className={classes.root}>\n        <CardHeader\n          avatar={\n            <Avatar aria-label=\"avatar test\" className={classes.avatar}>\n              {author}\n            </Avatar>\n          }\n          title={author}\n        />\n        <CardMedia title=\"Meme\">\n          <div className=\"meme\">\n            {isLoading ? (\n              <div className={classesLoader.root}>\n                <CircularProgress />\n              </div>\n            ) : (\n              <>\n              <img className='big'\n                \n                src={imgUrl}\n                alt={''}\n                onDoubleClick={() => tapLike(id)}\n              />\n              <NavLink to='/add'>\n              <Fab\n              color=\"secondary\"\n              aria-label=\"add\"\n              className={classes.fabButton}\n              // href=\"/add\"\n            >\n              \n              <AddIcon />\n              \n            </Fab>\n            </NavLink>\n              </>\n            )}\n            \n          </div>\n        </CardMedia>\n\n        <CardActions  className={classes.cardActions} disableSpacing={false}>\n          \n          <FormControlLabel\n            label={likesNumber}\n            checked={liked}\n            onChange={() => tapLike(id)}\n            control={\n              <Checkbox\n                icon={<FavoriteBorder />}\n                checkedIcon={<Favorite />}\n                name=\"checkedH\"\n              />\n            }\n          />\n\n          <IconButton aria-label=\"share\">\n            <ShareIcon />\n          </IconButton>\n          \n        </CardActions>\n      </Card>\n    </React.Fragment>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Paper from '@material-ui/core/Paper'\nimport Link from '@material-ui/core/Link'\nimport Typography from '@material-ui/core/Typography'\nimport { MemeMaterial_ } from './MemeMaterial'\nimport { MenuAppBar } from './MenuAppBar'\n\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport { AddPageContainer } from '../containers/AddPageContainer'\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Memstagram\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  )\n}\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: 'relative',\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 460,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}))\n\ntype memeProps = {}\n\nexport const Main_ = (props: any) => {\n  const classes = useStyles()\n  const {\n    list,\n    initMemes,\n    like,\n    setUser,\n    currentUser,\n    isLoading,\n    isLoaded,\n  } = props\n\n  console.log('Main props', props)\n\n  useEffect(() => {\n    // if(!currentUser) {\n    //   setUser(JSON.parse(localStorage.getItem('userData')!).email)\n    // }\n    initMemes()\n  }, [])\n\n  return (\n    <>\n      <CssBaseline />\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n          <MemeMaterial_ {...{ list, like, isLoading, isLoaded }} />\n          {/* <MenuAppBar /> */}\n        </Paper>\n        <Copyright />\n      </main>\n    </>\n  )\n}\n","import axios from 'axios'\n\n// export const getMemes = async function() {\n\n//   const allMemes = await axios.get('/api/meme/getlist')\n\n//   return allMemes\n// }\n\nconst config = {\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  timeout: 3000,\n}\n\nexport const getMemes = () => {\n  const instance = axios.create(config)\n  return instance\n    .get('/api/meme/getlist')\n    .then((response) => response.data)\n    .catch((error) => {\n      throw error\n    })\n}\n\nexport const likeMeme = (id: number) => {\n  return axios\n    .post('/api/meme/likememe', {\n      id: id,\n      email: JSON.parse(localStorage.getItem('userData')!).email,\n    })\n    .then((response) => console.log(response))\n    .catch((error) => {\n      throw new Error(error)\n    })\n}\n\nexport const uploadMeme = (meme: any) => {\n  return axios\n    .post('/api/meme/addpic', meme, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    })\n    .then((response) => console.log(response))\n    .catch((error) => {\n      throw new Error(error)\n    })\n}\n\n// export const authLoginAxios = (credentials) => {\n//   console.log('authLoginAxios credentials', credentials);\n//   const instance = axios.create(config)\n//   return instance\n//     .post('/api/auth/login', JSON.stringify(credentials))\n//       .then(response => {\n//         console.log('authLoginAxios response', response.data);\n//         return response.data\n//       })\n//       .catch(error => {\n//         throw error\n//       })\n// }\n","import { getMemes, likeMeme, uploadMeme } from '../../API/memesAPI'\n\nexport const LIKE_ID = 'LIKE_ID'\nexport const ADD_MEME = 'ADD_MEME'\nexport const LOAD_INITIAL_MEMES = 'LOAD_INITIAL_MEMES'\nexport const GET_USER = 'GET_USER'\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER'\n\nexport const MEMES_ARE_LOADING = 'MEMES_ARE_LOADING'\nexport const MEMES_LOADED = 'MEMES_LOADED'\nexport const MEMES_LOAD_FAILED = 'MEMES_LOAD_FAILED'\nexport const GET_USER_EMAIL = 'GET_USER_EMAIL'\n\nexport const addMeme = (meme: any) => {\n  console.log('Meme', meme)\n\n  return {\n    type: ADD_MEME,\n    payload: meme,\n  }\n}\n\nexport const memesIsLoading = () => {\n  return {\n    type: MEMES_ARE_LOADING,\n  }\n}\n\nexport const memesIsLoaded = (data: boolean) => {\n  return {\n    type: MEMES_LOADED,\n    payload: data,\n  }\n}\n\nexport const memesIsFail = (error: any) => {\n  return {\n    type: MEMES_LOAD_FAILED,\n    payload: error,\n  }\n}\n\nexport const initMemes = () => {\n  return async (dispatch: any) => {\n    dispatch(memesIsLoading())\n    await getMemes()\n      .then((data) => dispatch(memesIsLoaded(data)))\n      .catch((error) => dispatch(memesIsFail(error)))\n  }\n}\n\nexport const upload = (meme: any) => {\n  return async (dispatch: any) => {\n    try {\n      await uploadMeme(meme)\n    } catch (error) {\n      console.log('Upload error', error.message)\n    }\n  }\n}\n\nexport const addLiked = (id: number) => {\n  return {\n    type: LIKE_ID,\n    payload: id,\n  }\n}\n\nexport const like = (id: number) => {\n  return async (dispatch: any) => {\n    await likeMeme(id)\n    dispatch(addLiked(id))\n  }\n}\n\nexport const setUser = (user: string) => {\n  // const user = JSON.parse(localStorage.getItem('userData')!).email\n  console.log(user)\n  return {\n    type: GET_USER,\n    payload: user,\n  }\n}\n\nexport const getUserEmail = () => {\n  return {\n    type: GET_USER_EMAIL,\n  }\n}\n\n\n","import React from 'react'\nimport { Main_ } from '../components/Main'\nimport { connect } from 'react-redux'\nimport { addMeme, like, initMemes, setUser } from '../redux/actions/appActions'\n\nfunction mapStateToProps(state: any) {\n  return {\n    list: state.app.data,\n    currentUser: state.currentUser,\n    isLoading: state.app.isLoading,\n    isLoaded: state.app.isLoaded,\n  }\n}\n\nfunction mapDispatchToProps(dispatch: any) {\n  return {\n    like: (id: number) => dispatch(like(id)),\n    addMeme: (meme: object) => dispatch(addMeme(meme)),\n    initMemes: () => dispatch(initMemes()),\n    setUser: (user: string) => dispatch(setUser( user)),\n  }\n}\n\nconst Main = connect(mapStateToProps, mapDispatchToProps)(Main_)\n\nexport const MainPageContainer = () => {\n  return <Main />\n}","import React, { useState } from 'react'\nimport { useHttp } from '../hooks/http.hook'\nimport axios from 'axios'\n\nexport const ShowPage = () => {\n  const [meme, setMeme] = useState('')\n  const [imgUrl, setImgUrl] = useState('')\n\n  const getUser = async () => {\n    try {\n      const response = await axios.get('/api/meme/show', {\n        params: {\n          id: 3,\n        },\n      })\n      console.log(response.data[0])\n      setImgUrl('http://localhost:5000/' + response.data[0].imgUrl.slice(7))\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  const likeMeme = async () => {\n    try {\n      const response = await axios.post('/api/meme/likememe', {\n        id: 2\n      })\n    } catch (e) {\n      console.error(e)\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <button\n        type=\"button\"\n        className=\"btn btn-success btn-block\"\n        onClick={getUser}\n      >\n        Upload\n      </button>\n      <button\n        type=\"button\"\n        className=\"btn btn-success btn-block\"\n        onClick={likeMeme}\n      >\n        Like Meme\n      </button>\n      <img src={imgUrl} alt=\"альтернативный текст\" />\n    </React.Fragment>\n  )\n}\n","import { useState, useCallback } from 'react'\n\nexport const useHttp = () => {\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState(null)\n\n  const request = useCallback(\n    async (url, method = 'GET', body, headers) => {\n      setLoading(true)\n      \n\n      try {\n        // console.log('Headers', headers.headers['Content-Type'])\n        \n        if (body && (headers['Content-Type'] === 'application/json')) {\n          body = JSON.stringify(body)\n          // headers['Content-Type'] = 'application/json'\n        }\n\n        const response = await fetch(url, { method, body, headers })\n        const data = await response.json()\n\n        if (!response.ok) {\n          throw new Error(data.message || 'Что-то пошло не так')\n        }\n\n        setLoading(false)\n        return data\n      } catch (e) {\n        setLoading(false)\n        setError(e.message)\n        throw e\n      }\n    },\n    []\n  )\n\n  const clearError = useCallback(() => setError(null), [])\n  return { loading, request, error, clearError }\n}\n","import { createContext } from 'react'\n\nfunction noop() {}\nfunction noopLogin(token: string, userId: string, email: string) {}\n\nexport const AuthContext = createContext({\n  token: '',\n  userId: '',\n  email: '',\n  login: noopLogin,\n  logout: noop,\n  isAuthenticated: false,\n})\n","import React from 'react'\nimport { AuthPage } from '../pages/AuthPage'\nimport { connect } from 'react-redux'\nimport { setUser } from '../redux/actions/appActions'\n// import { authLogin } from '../actions/authActions'\n// import { setCurrentUser } from '../redux/actions/appActions'\n\n// const mapStateToProps = (state: any) => {\n//   return {\n//     authStarted: state.authorization.authStarted,\n//   }\n// }\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    // authLoginAction: (credentials) => dispatch(authLogin(credentials)),\n    setUser: (username: string) => dispatch(setUser(username)),\n  }\n}\n\nconst AuthPage_ = connect(null, mapDispatchToProps)(AuthPage)\n\nexport const AuthContainer = () => {\n  return <AuthPage_ />\n}\n","import React, { useState, useEffect, useContext } from 'react'\nimport { useHttp } from '../hooks/http.hook'\nimport { useMessage } from '../hooks/message.hook'\nimport { AuthContext } from '../context/AuthContext'\n\nexport const AuthPage = (props: any) => {\n  const { setUser } = props\n\n  const auth = useContext(AuthContext)\n\n  const message = useMessage()\n  const { loading, request, error, clearError } = useHttp()\n\n  type Form = {\n    email: string\n    password: string\n  }\n\n  const [form, setForm] = useState<Form>({\n    email: '',\n    password: '',\n  })\n\n  const changeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setForm({ ...form, [event.target.name]: event.target.value })\n  }\n\n  const registerHandler = async () => {\n    try {\n      const data = await request('/api/auth/register', 'POST', { ...form }, {'Content-Type': 'application/json'})\n    } catch (e) {\n      console.log('Register error: ', e.message)\n      \n    }\n  }\n\n  const loginHandler = async () => {\n    try {\n      const data = await request('/api/auth/login', 'POST', { ...form }, {'Content-Type': 'application/json'})\n      console.log('Auth Data', data);\n      \n      if (data.token) {\n        auth.login(data.token, data.userId, data.email)\n        setUser(data.email)\n        // setCurrentUser(data.email)\n\n        // props.authLoginAction({...form})\n      }\n    } catch (e) {\n      console.log('Error', e.message)\n    }\n  }\n\n  useEffect(() => {\n    message(error)\n    clearError()\n  }, [error, message, clearError])\n\n  return (\n    <div className=\"row\">\n      <div className=\"col s6 offset-s3\">\n        <div className=\"card blue darken-1\">\n          <div className=\"card-content white-text\">\n            <span className=\"card-title\">Авторизация</span>\n            <div>\n              <div className=\"input-field\">\n                <input\n                  placeholder=\"Введите email\"\n                  id=\"email\"\n                  type=\"text\"\n                  name=\"email\"\n                  className=\"yellow-input\"\n                  onChange={changeHandler}\n                />\n                <label htmlFor=\"email\">Email</label>\n              </div>\n              <div className=\"input-field\">\n                <input\n                  placeholder=\"Введите пароль\"\n                  id=\"password\"\n                  type=\"password\"\n                  name=\"password\"\n                  className=\"yellow-input\"\n                  onChange={changeHandler}\n                />\n                <label htmlFor=\"password\">Пароль</label>\n              </div>\n            </div>\n          </div>\n          <div className=\"card-action\">\n            <button\n              className=\"btn yellow darken-4\"\n              style={{ marginRight: 10 }}\n              disabled={loading}\n              onClick={loginHandler}\n            >\n              Войти\n            </button>\n            <button\n              className=\"btn grey lighten-1 black-text\"\n              onClick={registerHandler}\n              disabled={loading}\n            >\n              Регистрация\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { useCallback } from 'react'\n\nexport const useMessage = () => {\n  return useCallback((text) => {\n    if (window.M && text) {\n      window.M.toast({ html: text })\n    }\n  }, [])\n}\n","import React from 'react';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Paper from '@material-ui/core/Paper';\nimport Fab from '@material-ui/core/Fab';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Avatar from '@material-ui/core/Avatar';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AddIcon from '@material-ui/icons/Add';\nimport SearchIcon from '@material-ui/icons/Search';\nimport MoreIcon from '@material-ui/icons/MoreVert';\n\nconst messages = [\n  {\n    id: 1,\n    primary: 'Brunch this week?',\n    secondary: \"I'll be in the neighbourhood this week. Let's grab a bite to eat\",\n    person: '/static/images/avatar/5.jpg',\n  },\n  {\n    id: 2,\n    primary: 'Birthday Gift',\n    secondary: `Do you have a suggestion for a good present for John on his work\n      anniversary. I am really confused & would love your thoughts on it.`,\n    person: '/static/images/avatar/1.jpg',\n  },\n  {\n    id: 3,\n    primary: 'Recipe to try',\n    secondary: 'I am try out this new BBQ recipe, I think this might be amazing',\n    person: '/static/images/avatar/2.jpg',\n  },\n  {\n    id: 4,\n    primary: 'Yes!',\n    secondary: 'I have the tickets to the ReactConf for this year.',\n    person: '/static/images/avatar/3.jpg',\n  },\n  {\n    id: 5,\n    primary: \"Doctor's Appointment\",\n    secondary: 'My appointment for the doctor was rescheduled for next Saturday.',\n    person: '/static/images/avatar/4.jpg',\n  },\n  {\n    id: 6,\n    primary: 'Discussion',\n    secondary: `Menus that are generated by the bottom app bar (such as a bottom\n      navigation drawer or overflow menu) open as bottom sheets at a higher elevation\n      than the bar.`,\n    person: '/static/images/avatar/5.jpg',\n  },\n  {\n    id: 7,\n    primary: 'Summer BBQ',\n    secondary: `Who wants to have a cookout this weekend? I just got some furniture\n      for my backyard and would love to fire up the grill.`,\n    person: '/static/images/avatar/1.jpg',\n  },\n];\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    text: {\n      padding: theme.spacing(2, 2, 0),\n    },\n    paper: {\n      paddingBottom: 50,\n    },\n    list: {\n      marginBottom: theme.spacing(2),\n    },\n    subheader: {\n      backgroundColor: theme.palette.background.paper,\n    },\n    appBar: {\n      top: 'auto',\n      bottom: 0,\n    },\n    grow: {\n      flexGrow: 1,\n    },\n    fabButton: {\n      position: 'absolute',\n      zIndex: 1,\n      top: -30,\n      left: 0,\n      right: 0,\n      margin: '0 auto',\n    },\n  }),\n);\n\nexport function BottomAppBar() {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n\n      <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton edge=\"start\" color=\"inherit\" aria-label=\"open drawer\">\n            <MenuIcon />\n          </IconButton>\n          <Fab color=\"secondary\" aria-label=\"add\" className={classes.fabButton}>\n            <AddIcon />\n          </Fab>\n          <div className={classes.grow} />\n          <IconButton color=\"inherit\">\n            <SearchIcon />\n          </IconButton>\n          <IconButton edge=\"end\" color=\"inherit\">\n            <MoreIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n    </React.Fragment>\n  );\n}\n","import { CssBaseline, Link, Paper, Typography } from '@material-ui/core'\nimport { makeStyles, Theme } from '@material-ui/core/styles'\nimport React, { useEffect, useState } from 'react'\n\nimport { useHttp } from '../hooks/http.hook'\nimport 'antd/dist/antd.css'\nimport '../index.css'\nimport { Upload, message } from 'antd'\nimport { InboxOutlined } from '@ant-design/icons'\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Memstagram\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  )\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  appBar: {\n    position: 'relative',\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 460,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}))\n\nconst { Dragger } = Upload\n\nexport const AddMeme = () => {\n  const { loading, request, error, clearError } = useHttp()\n  const [author, setAuthor] = useState('')\n  const [selectedFile, setSelectedFile] = useState<any>('')\n  const [description, setDescription] = useState('')\n  \n  \n\n  const propsDrag = {\n    name: 'file',\n    multiple: false,\n    action: '/api/meme/addpic',\n    onChange(info: any) {\n      const { status } = info.file\n      if (status !== 'uploading') {\n        console.log(info.file, info.fileList)\n      }\n      if (status === 'done') {\n        message.success(`${info.file.name} file uploaded successfully.`)\n      } else if (status === 'error') {\n        message.error(`${info.file.name} file upload failed.`)\n      }\n    },\n    beforeUpload: (file: any) => {\n      setSelectedFile(file)\n      \n      return false;\n    },\n\n  }\n\n  const classes = useStyles()\n\n  const onClickHandler = async () => {\n    const data = new FormData()\n    data.append('file', selectedFile)\n    data.append('author', author)\n    data.append('description', description)\n\n    try {\n      const hookResponse = await request('/api/meme/addpic', 'POST', data, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      })\n\n      console.log('fetchResponse', hookResponse)\n      setSelectedFile(null)\n      setAuthor('')\n      setDescription('')\n      message.success(`File uploaded successfully.`)\n\n      // const response = await axios.post('/api/meme/addpic', data, {\n      //   headers: {\n      //     'Content-Type': 'multipart/form-data',\n      //   },\n      // })\n\n      // console.log('axiosResponse', response)\n    } catch (error) {\n      console.log('Upload error', error)\n    }\n  }\n\n  return (\n    <>\n      <CssBaseline />\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n          <input\n            id=\"author\"\n            type=\"text\"\n            className=\"validate\"\n            placeholder=\"author\"\n            onChange={(e) => setAuthor(e.target.value)}\n            value={author}\n          />\n          <input\n            id=\"description\"\n            type=\"text\"\n            className=\"validate\"\n            placeholder=\"description\"\n            onChange={(e) => setDescription(e.target.value)}\n            value={description}\n          />\n          <Dragger {...propsDrag}>\n            <p className=\"ant-upload-drag-icon\">\n              <InboxOutlined />\n            </p>\n            <p className=\"ant-upload-text\">\n              Click or drag file to this area to upload\n            </p>\n            <p className=\"ant-upload-hint\">\n              Support for a single or bulk upload. Strictly prohibit from\n              uploading company data or other band files\n            </p>\n          </Dragger>\n          <button\n            type=\"button\"\n            className=\"btn btn-success btn-block\"\n            onClick={onClickHandler}\n          >\n            Upload\n          </button>\n        </Paper>\n        <Copyright />\n      </main>\n    </>\n  )\n}\n","import React, { useContext } from 'react'\n\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport AccountCircle from '@material-ui/icons/AccountCircle'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Menu from '@material-ui/core/Menu'\n\nimport { AuthContext } from '../context/AuthContext'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  })\n)\n\nexport const MenuAppBar = () => {\n  const auth = useContext(AuthContext)\n\n  const classes = useStyles()\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null)\n  const open = Boolean(anchorEl)\n\n  const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Photos\n          </Typography>\n          \n            <div>\n              <IconButton\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                open={open}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                <MenuItem onClick={handleClose}>My account</MenuItem>\n                <MenuItem onClick={auth.logout}>Logout</MenuItem>\n                \n              </Menu>\n            </div>\n          \n        </Toolbar>\n      </AppBar>\n    </div>\n  )\n}\n","import React from 'react'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport 'materialize-css'\nimport { useRoutes } from './routes'\nimport { useAuth } from './hooks/auth.hook'\nimport { AuthContext } from './context/AuthContext'\nimport { MenuAppBar } from './components/MenuAppBar'\n\n\nfunction App() {\n  const { login, logout, token, userId, email } = useAuth()\n  const isAuthenticated = !!token\n  \n\n  const routes = useRoutes(isAuthenticated)\n\n  return (\n    <AuthContext.Provider\n      value={{\n        login,\n        logout,\n        token,\n        userId,\n        isAuthenticated,\n        email,\n      }}\n    >\n      <Router>\n        {isAuthenticated && <MenuAppBar/>}\n        <div className=\"container\">{routes}</div>\n      </Router>\n    </AuthContext.Provider>\n  )\n}\n\nexport default App\n","import { useState, useCallback, useEffect } from 'react'\n\nconst storageName = 'userData'\n\nexport const useAuth = () => {\n  const [token, setToken] = useState<string>('')\n  const [userId, setUserId] = useState<string>('')\n  const [email, setEmail] = useState<string>('')\n\n  const login = useCallback((jwtToken, id, userEmail) => {\n    setToken(jwtToken)\n    setUserId(id)\n    setEmail(userEmail)\n\n    localStorage.setItem(\n      storageName,\n      JSON.stringify({\n        userId: id,\n        token: jwtToken,\n        email: userEmail,\n      })\n    )\n  }, [])\n\n  const logout = useCallback(() => {\n    setToken('')\n    setUserId('')\n    setEmail('')\n    localStorage.removeItem(storageName)\n  }, [])\n\n  useEffect(() => {\n    const data = JSON.parse(localStorage.getItem(storageName)!)\n\n    if (data && data.token) {\n      login(data.token, data.userId, data.email)\n    }\n  }, [login])\n\n  return { login, logout, token, userId, email }\n}\n","import React from 'react'\nimport { Switch, Route, Redirect, Router } from 'react-router-dom'\nimport { MainPageContainer } from './containers/MainPageContainer'\nimport { AddPage_ } from './pages/AddPage'\nimport { ShowPage } from './pages/ShowPage'\nimport { AuthPage } from './pages/AuthPage'\nimport { AuthContainer } from './containers/AuthContainer'\nimport { AddPageContainer } from './containers/AddPageContainer'\nimport { BottomAppBar } from './components/PlusMeme'\nimport { AddMeme } from './components/AddMeme'\n\nexport const useRoutes = (isAuthenticated: boolean) => {\n  if (isAuthenticated) {\n    return (\n      <Switch>\n        <Route path=\"/\" exact>\n          <MainPageContainer />\n        </Route>\n        <Route path=\"/add\" exact>\n        {/* < AddPage_ /> */}\n        < AddMeme />\n        </Route>\n        <Route path=\"/show\" exact>\n          <ShowPage />\n        </Route>\n        <Route path=\"/plus\" exact>\n          <BottomAppBar />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    )\n  }\n\n  return (\n    <Switch>\n      <Route path=\"/\">\n        <AuthContainer />\n      </Route>\n      <Redirect to=\"/\" />\n    </Switch>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n  AUTH_COMPLETED,\n  AUTH_STARTED,\n  AUTH_FAILED,\n  LOGGED_IN,\n} from '../actions/authActions'\n\nconst initialState = {\n  authData: {},\n  authStarted: false,\n  authCompleted: false,\n  authFailed: null,\n  loggedIn: false,\n}\n\nexport const authReducer = (state = initialState, action: any) => {\n\n  switch (action.type) {\n    case AUTH_STARTED: {\n      return { ...state, authStarted: true }\n    }\n\n    case AUTH_COMPLETED: {\n      return {\n        ...state,\n        authStarted: false,\n        authCompleted: true,\n        authData: action.payload,\n      }\n    }\n\n    case AUTH_FAILED: {\n      return {\n        ...state,\n        authStarted: false,\n        authCompleted: false,\n        authFailed: action.error,\n      }\n    }\n\n    case LOGGED_IN: {\n      return {\n        ...state,\n        loggedIn: true,\n      }\n    }\n\n    default:\n      return state\n  }\n}\n","import {\n  MEMES_ARE_LOADING,\n  MEMES_LOADED,\n  MEMES_LOAD_FAILED,\n  GET_USER,\n  SET_CURRENT_USER,\n  LIKE_ID,\n} from '../actions/appActions'\n\ntype AppState = {\n  currentUser: string,\n  data: Array<{}>,\n  isLoading: boolean,\n  isLoaded: boolean,\n  error: any\n}\n\nconst initialState: AppState = {\n  currentUser: '',\n  data: [],\n  isLoading: false,\n  isLoaded: false,\n  error: null,\n}\n\ntype Action = {\n  type: string,\n  payload: any,\n  error: any\n}\n\nexport const appReducer = (state = initialState, action: Action) => {\n  switch (action.type) {\n    case MEMES_ARE_LOADING: {\n      return { ...state, isLoading: true }\n    }\n\n    case MEMES_LOADED: {\n      return {\n        ...state,\n        isLoading: false,\n        isLoaded: true,\n        data: action.payload,\n      }\n    }\n\n    case MEMES_LOAD_FAILED: {\n      return {\n        ...state,\n        isLoaded: false,\n        isLoading: false,\n        error: action.error,\n      }\n    }\n\n    case SET_CURRENT_USER: {\n      return {\n        ...state,\n        currentUser: action.payload,\n      }\n    }\n\n    case GET_USER: {\n      return {\n        ...state,\n        currentUser: action.payload,\n      }\n    }\n\n    case LIKE_ID: {\n      const currentUser = JSON.parse(localStorage.getItem('userData')!).email\n\n      return {\n        ...state,\n        data: state.data.map((meme: any) => {\n          if (meme.id === action.payload) {\n            return {\n              ...meme,\n              likedBy: meme.likedBy.some((user: string) => user === currentUser)\n                ? meme.likedBy.filter((user: string) => user !== currentUser)\n                : [...meme.likedBy, currentUser],\n            }\n          } else {\n            return meme\n          }\n        }),\n      }\n    }\n\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport { authReducer } from './authReducer'\nimport { appReducer } from './reducer'\n\nexport const rootReducer = combineReducers({\n  authorization: authReducer,\n  app: appReducer,\n})\n","// import { authLoginAxios } from \"../API/memesAPI\";\n\nexport const AUTH_STARTED = \"AUTH_STARTED\";\nexport const AUTH_COMPLETED = \"AUTH_COMPLETED\";\nexport const AUTH_FAILED = \"AUTH_FAILED\";\nexport const LOGGED_IN = \"LOGGED_IN\";\n\n// export const authStarted = () => {\n//   console.log(\"authStarted\");\n//   return {\n//     type: AUTH_STARTED,\n//   };\n// };\n\n// export const authCompleted = (data) => {\n//   return {\n//     type: AUTH_COMPLETED,\n//     payload: data,\n//   };\n// };\n\n// export const authFailed = (error) => {\n//   return {\n//     type: AUTH_FAILED,\n//     payload: error,\n//   };\n// };\n\n// export const login = (data) => {\n//   localStorage.setItem(\n//     \"userData\",\n//     JSON.stringify({\n//       userId: data.userId,\n//       token: data.token,\n//       email: data.email,\n//     })\n//   );\n//   return {\n//     type: LOGGED_IN,\n//   };\n// };\n\n// export const authLogin = (credentials) => {\n//   console.log(\"authLogin credentials\", credentials);\n//   return async function (dispatch) {\n//     dispatch(authStarted());\n//     await authLoginAxios(credentials)\n//       .then((data) => dispatch(authCompleted(data)))\n//       .then((data) => dispatch(login(data)))\n//       .catch((error) => dispatch(authFailed(error)));\n//   };\n// };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { configureStore } from './redux/store/index'\n\nconst store = configureStore()\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport { rootReducer } from '../reducers'\nimport logger from 'redux-logger'\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION__?: any\n  }\n}\n\nexport const configureStore = () =>\n  createStore(\n    rootReducer,\n    compose(\n      applyMiddleware(logger, thunk),\n      window.__REDUX_DEVTOOLS_EXTENSION__ &&\n        window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n  )\n"],"sourceRoot":""}